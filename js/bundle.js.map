{"version":3,"sources":["webpack/bootstrap 7cd8a11607a95d6acf02","./js/main.js","./js/view.js","./js/board.js","./js/square.js","./js/block.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;AACA;AACA,EAAC;;;;;;;ACLD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,qBAAqB;AACrC,mBAAkB,qBAAqB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,eAAc,mCAAmC;;AAEjD;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,8BAA6B,yBAAyB,EAAE;AACxD,8BAA6B,yBAAyB,EAAE;AACxD;AACA;AACA;;AAEA;;;;;;;ACvHA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,eAAe;AAChC;AACA,oBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,eAAc,mCAAmC;;AAEjD;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,kDAAiD,eAAe,EAAE;AAClE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA,iCAAgC;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0CAAyC,eAAe,EAAE;AAC1D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0BAAyB,oCAAoC,EAAE;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;;;;;;;ACpQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,aAAY,mCAAmC;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;;AAGA;;;;;;;AC1DA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;;;AAGT;AACA;AACA;AACA;AACA;AACA;;AAEA,0BAAyB,mCAAmC;AAC5D;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;;;AAGT;AACA;AACA;AACA;AACA;AACA;;AAEA,0BAAyB,mCAAmC;AAC5D;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;;AAEA;AACA;AACA;AACA;AACA;;AAEA,wBAAuB,mCAAmC;AAC1D;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC,uFAAuF;AAC1H;AACA,YAAW;AACX;AACA,QAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;;AAGP;;AAEA;AACA;AACA;AACA;AACA;;AAEA,wBAAuB,mCAAmC;AAC1D;AACA;AACA,QAAO;;AAEP;AACA;;AAEA;AACA;AACA;AACA;AACA,oCAAmC,uFAAuF;AAC1H;AACA,YAAW;AACX;AACA,QAAO;AACP;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/js/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 7cd8a11607a95d6acf02\n **/","var View = require('./view');\n\n$(function () {\n  var rootEl = $('.lumines-game');\n  new View(rootEl);\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/main.js\n ** module id = 0\n ** module chunks = 0\n **/","var Board = require('./board');\nvar Square = require('./square');\n\nvar View = function($el) {\n  this.$el = $el;\n  this.board = new Board();\n  this.setupGrid();\n  this.makeBlocks();\n  this.bindStart();\n  this.timer = 0;\n  this.gameIsStarted = false;\n};\n\nView.prototype.start = function () {\n  if (!this.gameIsStarted) {\n    $('.overlay').css(\"display\", \"none\");\n    $('.instructions').css(\"display\",\"none\");\n    this.keyBind();\n    this.gameIsStarted = true;\n    this.intervalId = window.setInterval(this.step.bind(this), 10);\n  } else {\n    clearInterval(this.intervalId);\n    $('.gameover').css(\"display\", \"none\");\n    $('.overlay').css(\"display\", \"none\");\n    this.board = new Board();\n    $('#squares').empty();\n    this. makeBlocks();\n    this.timer = 0;\n    this.intervalId = window.setInterval(this.step.bind(this), 10);\n  }\n};\n\nView.prototype.bindStart = function () {\n  $(window).on('keydown', function(event){\n    if (event.which === 13) {\n      this.start();\n    }\n  }.bind(this));\n};\n\nView.prototype.setupGrid = function(){\n  var $ul = $('<ul>');\n  $ul.addClass('cf');\n  this.$el.append($ul);\n  var $div = $('<div>');\n  var $scanline = $('<div>').addClass(\"scanline\");\n  $ul.append($scanline);\n  $div.attr('id', 'squares');\n  $ul.append($div);\n  for(var i = 0; i < this.board.dimY; i++){\n    for(var j = 0; j < this.board.dimX; j++) {\n      var $li = $('<li>');\n      $li.attr('pos', [j, i]);\n      if (i < 2) {\n        $li.addClass('nostyle');\n      }\n      $ul.append($li);\n    }\n  }\n};\n\nView.prototype.makeBlocks = function() {\n  var positions = [[0,7], [0,8], [1,7], [1,8]];\n\n  positions.forEach(function(pos) {\n    var $div = $('<div>');\n    $div.attr('pos', pos);\n\n    var top = 60 * pos[0];\n    var left = 60 * pos[1];\n\n    $div.css({top: top + 'px', left: left + 'px'});\n\n    $('#squares').append($div);\n  });\n  this.board.block.squares.forEach(function(square){\n    var pos = square.pos;\n    $('div[pos=\"' + pos[0] + ',' + pos[1] + '\"]').addClass(\"square square-\" + square.color);\n  });\n\n};\n\nView.prototype.keyBind = function() {\n  $(window).on('keydown', function(event){\n    this.board.move(event.which);\n  }.bind(this));\n};\n\nView.prototype.step = function() {\n\n  this.timer += 10;\n  this.board.fixScan();\n\n  if (this.board.gameOver()) {\n    window.clearInterval(this.intervalId);\n    $('.score')[0].innerHTML = \"Score: \" + this.board.score;\n    $('.gameover').css(\"display\",\"flex\");\n    $('.overlay').css(\"display\",\"flex\");\n  } else {\n    if (this.timer % 50 === 0)\n    {\n      if (this.board.gameOver()) {\n        console.log('test');\n      }\n      this.board.squareStep();\n    }\n\n    if (this.timer % 1500 === 0) {\n      this.board.blockStep();\n    }\n\n    if (this.timer % 5000 === 0) {\n      this.board.moveLine();\n      setTimeout(function() { this.board.deleteStep(); }.bind(this), 1000);\n      setTimeout(function() { this.board.deleteStep(); }.bind(this), 2000);\n    }\n  }\n};\n\nmodule.exports = View;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/view.js\n ** module id = 1\n ** module chunks = 0\n **/","var Square = require('./square');\nvar Block = require('./block');\n\nvar Board = function() {\n  this.dimY = 10;\n  this.dimX = 16;\n  this.grid = [];\n  this.squares = [];\n  this.makeGrid();\n  this.block = new Block(this);\n  this.lastBlock = \"placeholder\";\n  this.freshlyMoved = [];\n  this.makeBlockCheck = false;\n  this.score = 0;\n};\n\nBoard.BLANK_SYMBOL = '.';\nBoard.DELTAS = [[[-1,0], [0,-1]],\n                [[-1,0], [0,1]],\n                [[1,0], [0,1]],\n                [[1,0], [0,-1]]];\n\nBoard.prototype.makeGrid = function () {\n  for (var i = 0; i < this.dimY; i++) {\n    var row = [];\n    for (var j = 0; j < this.dimX; j++) {\n      row.push(Board.BLANK_SYMBOL);\n    }\n    this.grid.push(row);\n  }\n};\n\nBoard.prototype.addSquares = function (squares) {\n  this.squares = this.squares.concat(squares);\n};\n\nBoard.prototype.validPos = function (pos) {\n  return (pos[0] >= 0) && (pos[0] < this.dimY) &&\n    (pos[1] >= 0) && (pos[1] < this.dimX);\n};\n\nBoard.prototype.makeBlock = function () {\n\n  this.block = new Block(this);\n\n  var positions = [[0,7], [0,8], [1,7], [1,8]];\n\n  positions.forEach(function(pos) {\n    var $div = $('<div>');\n    $div.attr('pos', pos);\n\n    var top = 60 * pos[0];\n    var left = 60 * pos[1];\n\n    $div.css({top: top + 'px', left: left + 'px'});\n\n    $('#squares').append($div);\n  });\n  this.block.squares.forEach(function(square){\n    var pos = square.pos;\n    $('div[pos=\"' + pos[0] + ',' + pos[1] + '\"]').addClass(\"square square-\" + square.color);\n  });\n};\n\nBoard.prototype.checkPos = function(pos) {\n  if (pos[0] > 9) {\n    return false;\n  }\n  if (this.grid[pos[0]][pos[1]] === '.') {\n    return true;\n  } else {\n    var squareInBlock = false;\n    var allSquares = this.squares.concat(this.block.squares);\n    allSquares.forEach(function(square) {\n      if (JSON.stringify(square.pos) === JSON.stringify(pos)) {\n        if (!square.fixed) {\n          squareInBlock = true;\n        }\n      }\n    });\n    return squareInBlock;\n  }\n};\n\nBoard.prototype.blockStep = function() {\n  if (!this.madeBlock) {\n    this.block.squares.forEach(function(square) { square.drop(); });\n  }\n};\n\nBoard.prototype.checkDelete = function(queue, skip) {\n  var current = queue.pop();\n  var currentRow = current.pos[0];\n  var currentColumn = current.pos[1];\n  Board.DELTAS.forEach(function(delta) {\n    if ((currentRow === 0 && delta[0][0] === -1 || currentRow === 9 && delta[0][0] === 1) || (currentColumn === 0 && delta[1][1] === -1) ||\n        (currentColumn === 15 && delta[1][1] === 1))   {\n      return;\n    }\n    if (this.grid[currentRow + delta[0][0]][currentColumn + delta[0][1]] === current.color\n        && this.grid[currentRow + delta[1][0]][currentColumn + delta[1][1]] === current.color) {\n      if (this.grid[currentRow + delta[0][0]][currentColumn + delta[1][1]] === current.color) {\n        current.toDelete = true;\n        $('div[pos=\"' + current.pos[0] + ',' + current.pos[1] + '\"]').addClass('delete');\n\n        var squareOne = this.findSquare([currentRow + delta[0][0],currentColumn + delta[0][1]]);\n        squareOne.toDelete = true;\n        $('div[pos=\"' + squareOne.pos[0] + ',' + squareOne.pos[1] + '\"]').addClass('delete');\n        if (skip.indexOf(squareOne) === -1) {\n          queue.push(squareOne);\n          skip.push(squareOne);\n        }\n        var squareTwo = this.findSquare([currentRow + delta[1][0],currentColumn + delta[1][1]]);\n        squareTwo.toDelete = true;\n        $('div[pos=\"' + squareTwo.pos[0] + ',' + squareTwo.pos[1] + '\"]').addClass('delete');\n        if (skip.indexOf(squareTwo) === -1) {\n          queue.push(squareTwo);\n          skip.push(squareTwo);\n        }\n        var squareThree = this.findSquare([currentRow + delta[0][0],currentColumn + delta[1][1]]);\n        squareThree.toDelete = true;\n        $('div[pos=\"' + squareThree.pos[0] + ',' + squareThree.pos[1] + '\"]').addClass('delete');\n        if (skip.indexOf(squareThree) === -1) {\n          queue.push(squareThree);\n          skip.push(squareThree);\n        }\n      }\n    }\n  }.bind(this));\n};\n\nBoard.prototype.findSquare = function(pos) {\n  var result = [];\n  this.squares.forEach(function(square) {\n    if (JSON.stringify(square.pos) === JSON.stringify(pos)) {\n      result.push(square);\n    }\n  });\n  return result[0];\n};\n\nBoard.prototype.fixScan = function () {\n  var notFixed = this.squares.filter(function(square) {\n    return !square.fixed;\n  });\n\n  notFixed.forEach(function(square) {\n    square.checkFix();\n  });\n};\n\nBoard.prototype.squareStep = function() {\n  if (!this.block.activeCheck()) {\n    this.lastBlock = $.extend({}, this.block);\n    this.addSquares(this.lastBlock.squares);\n    this.block.squares = [];\n  }\n\n  if (typeof this.lastBlock === 'object') {\n    if (fixedCheck(this.lastBlock.squares)) {\n      this.makeBlockCheck = true;\n      var toCheck = this.lastBlock.squares.slice();\n      var skipCheck = this.lastBlock.squares.slice();\n      while (toCheck.length) {\n        this.checkDelete(toCheck, skipCheck);\n      }\n      this.lastBlock = \"placeholder\";\n    }\n  }\n\n  this.madeBlock = false;\n  if (!this.gameOver()) {\n    if (this.makeBlockCheck) {\n      this.makeBlock();\n      this.makeBlockCheck = false;\n      this.madeBlock = true;\n    }\n  }\n\n  if (this.freshlyMoved.length > 0) {\n    if (fixedCheck(this.freshlyMoved)) {\n      toCheck = this.freshlyMoved.slice();\n      skipCheck = this.freshlyMoved.slice();\n      while (toCheck.length) {\n        this.checkDelete(toCheck, skipCheck);\n      }\n      this.freshlyMoved = [];\n    }\n  }\n\n  this.squares.forEach(function(square) { square.drop(); });\n};\n\nBoard.prototype.deleteStep = function() {\n  var dupedSquares = this.squares.slice();\n  var unFix = [];\n  var counter = 0;\n  dupedSquares.forEach(function(square, idx) {\n    if (square.toDelete) {\n      unFix.push(square.pos[1]);\n      this.squares.splice(idx - counter, 1)[0];\n      $('div[pos=\"' + square.pos[0] + ',' + square.pos[1] + '\"]').remove();\n      this.grid[square.pos[0]][square.pos[1]] = '.';\n      counter += 1;\n    }\n  }.bind(this));\n  this.score += 20 * counter;\n  unFix.forEach(function(pos) {\n    this.squares.forEach(function(otherSquare) {\n      if (otherSquare.pos[1] === pos) {\n        this.freshlyMoved.push(otherSquare);\n        otherSquare.fixed = false;\n      }\n    }.bind(this));\n  }.bind(this));\n};\n\nBoard.prototype.move = function(dir) {\n  switch(dir) {\n    case 37:\n      this.block.move(dir);\n      break;\n    case 39:\n      this.block.move(dir);\n      break;\n    case 40:\n      this.block.move(dir);\n      break;\n    case 68:\n      this.block.move(dir);\n      break;\n    case 65:\n      this.block.move(dir);\n      break;\n  }\n};\n\nBoard.prototype.moveLine = function () {\n  $('.scanline').addClass(\"scan\");\n  setTimeout(function() { $('.scanline').removeClass(\"scan\"); }, 2000);\n};\n\nvar fixedCheck = function(squares) {\n  var allFixed = true;\n  squares.forEach(function(square) {\n    if (!square.fixed) {\n      allFixed = false;\n    }\n  });\n  return allFixed;\n};\n\nBoard.prototype.gameOver = function () {\n  return this.squares.some(function(square) {\n    if (square.fixed) {\n      return (square.pos[0] === 1 || square.pos[0] === 0);\n    }\n  });\n};\n\nmodule.exports = Board;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/board.js\n ** module id = 2\n ** module chunks = 0\n **/","var Square = function(color, pos, board, block) {\n  this.color = color;\n  this.board = board;\n  this.pos = pos;\n  this.fixed = false;\n  this.active = true;\n  this.block = block;\n  this.toDelete = false;\n};\n\nSquare.prototype.drop = function() {\n  if (this.pos[0] === 9 && !this.fixed) {\n    this.fixed = true;\n  }\n  var oldPos = this.pos.slice();\n\n  if (!this.board.checkPos([this.pos[0] + 1, this.pos[1]]) ||\n      !this.board.validPos([this.pos[0] + 1, this.pos[1]])) {\n    this.fixed = true;\n    this.block.squares.forEach(function(square){\n      $('div[pos=\"'+ square.pos[0] + ',' + square.pos[1] +'\"]').addClass('fixed');\n      square.active = false;\n    });\n  }\n\n  if (!this.fixed) {\n    this.pos[0] += 1;\n  }\n\n  this.board.grid[oldPos[0]][oldPos[1]] = \".\";\n  this.board.grid[this.pos[0]][this.pos[1]] = this.color;\n\n  var $div = $('div[pos=\"' + oldPos[0] + ',' + oldPos[1] + '\"]').attr('pos', this.pos);\n\n  var top = 60 * this.pos[0];\n  var left = 60 * this.pos[1];\n\n  $div.css({top: top + 'px', left: left + 'px'});\n};\n\nSquare.prototype.checkFix = function () {\n  var blockBelow = [this.pos[0] + 1, this.pos[1]];\n  if (!this.board.validPos(blockBelow)) {\n    $('div[pos=\"'+ this.pos[0] + ',' + this.pos[1] +'\"]').addClass('fixed');\n    this.fixed = true;\n  } else if (this.board.grid[blockBelow[0]][blockBelow[1]] !== '.') {\n    this.board.squares.forEach(function(square) {\n      if (JSON.stringify(square.pos) === JSON.stringify(blockBelow)) {\n        if (square.fixed) {\n          $('div[pos=\"'+ this.pos[0] + ',' + this.pos[1] +'\"]').addClass('fixed');\n          this.fixed = true;\n        }\n      }\n    }.bind(this));\n  }\n};\n\n\nmodule.exports = Square;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/square.js\n ** module id = 3\n ** module chunks = 0\n **/","var Square = require('./square');\n\nvar SQUARE_COLORS = ['light', 'dark'];\n\nvar Block = function(board) {\n  this.board = board;\n  this.squares = [];\n  this.new();\n};\n\nBlock.prototype.new = function() {\n  this.squares = [];\n\n  this.squares.push(new Square(SQUARE_COLORS[Math.floor(Math.random() *\n                               SQUARE_COLORS.length)], [1, 7], this.board, this));\n  this.board.grid[this.squares[0].pos[0]][this.squares[0].pos[1]] =\n                                                        this.squares[0].color;\n  this.squares.push(new Square(SQUARE_COLORS[Math.floor(Math.random() *\n                               SQUARE_COLORS.length)], [1, 8], this.board, this));\n  this.board.grid[this.squares[1].pos[0]][this.squares[1].pos[1]] =\n                                                        this.squares[1].color;\n  this.squares.push(new Square(SQUARE_COLORS[Math.floor(Math.random() *\n                               SQUARE_COLORS.length)], [0, 7], this.board, this));\n  this.board.grid[this.squares[2].pos[0]][this.squares[2].pos[1]] =\n                                                        this.squares[2].color;\n  this.squares.push(new Square(SQUARE_COLORS[Math.floor(Math.random() *\n                               SQUARE_COLORS.length)], [0, 8], this.board, this));\n  this.board.grid[this.squares[3].pos[0]][this.squares[3].pos[1]] =\n                                                        this.squares[3].color;\n};\n\nBlock.prototype.activeCheck = function () {\n  var active = true;\n  this.squares.forEach(function(square) {\n    if (!square.active) {\n      active = false;\n    }\n  });\n  return active;\n};\n\nBlock.prototype.move = function(dir) {\n  switch(dir) {\n    case 37:\n      var valid = true;\n      var divs = [];\n      this.squares.forEach(function(square) {\n        if (!this.board.validPos([square.pos[0], square.pos[1] - 1])\n            || !this.board.checkPos([square.pos[0], square.pos[1] - 1 ])){\n            valid = false;\n        }\n      }.bind(this));\n\n      if (valid) {\n        this.squares.forEach(function(square) {\n          if (square.active) {\n            var oldPos = square.pos.slice();\n            square.pos[1] -= 1;\n            this.board.grid[oldPos[0]][oldPos[1]] = \".\";\n            this.board.grid[square.pos[0]][square.pos[1]] = square.color;\n\n            divs.push($('div[pos=\"' + oldPos[0] + ',' + oldPos[1] + '\"]'));\n          }\n        }.bind(this));\n\n\n        var i = 0;\n        this.squares.forEach(function(square, idx) {\n          if (square.active) {\n            divs[i].attr('pos', square.pos);\n            var top = 60 * square.pos[0];\n            var left = 60 * square.pos[1];\n\n            divs[i].css({top: top + 'px', left: left + 'px'});\n            i += 1;\n          }\n        });\n\n        this.squares.forEach(function(square) {\n          if (!square.board.checkPos([square.pos[0] + 1, square.pos[1]]) ||\n              !square.board.validPos([square.pos[0] + 1, square.pos[1]])) {\n            square.fixed = true;\n            square.block.squares.forEach(function(otherSquare){\n              $('div[pos=\"'+ otherSquare.pos[0] + ',' + otherSquare.pos[1] +'\"]').addClass('fixed');\n              otherSquare.active = false;\n            });\n          }\n        });\n      }\n      break;\n\n    case 39:\n      valid = true;\n      divs = [];\n      this.squares.forEach(function(square) {\n        if (!this.board.validPos([square.pos[0], square.pos[1] + 1])\n            || !this.board.checkPos([square.pos[0], square.pos[1] + 1 ])){\n            valid = false;\n        }\n      }.bind(this));\n\n      if (valid) {\n        this.squares.forEach(function(square) {\n          if (square.active) {\n            var oldPos = square.pos.slice();\n            square.pos[1] += 1;\n            this.board.grid[oldPos[0]][oldPos[1]] = \".\";\n            this.board.grid[square.pos[0]][square.pos[1]] = square.color;\n\n            divs.push($('div[pos=\"' + oldPos[0] + ',' + oldPos[1] + '\"]'));\n          }\n        }.bind(this));\n\n\n        i = 0;\n        this.squares.forEach(function(square, idx) {\n          if (square.active) {\n            divs[i].attr('pos', square.pos);\n            var top = 60 * square.pos[0];\n            var left = 60 * square.pos[1];\n\n            divs[i].css({top: top + 'px', left: left + 'px'});\n            i += 1;\n          }\n        });\n\n        this.squares.forEach(function(square) {\n          if (!square.board.checkPos([square.pos[0] + 1, square.pos[1]]) ||\n              !square.board.validPos([square.pos[0] + 1, square.pos[1]])) {\n            square.fixed = true;\n            square.block.squares.forEach(function(otherSquare){\n              $('div[pos=\"'+ otherSquare.pos[0] + ',' + otherSquare.pos[1] +'\"]').addClass('fixed');\n              otherSquare.active = false;\n            });\n          }\n        });\n      }\n      break;\n\n    case 40:\n      this.squares.forEach(function(otherSquare){\n        $('div[pos=\"'+ otherSquare.pos[0] + ',' + otherSquare.pos[1] +'\"]').addClass('fixed');\n        otherSquare.active = false;\n      }.bind(this));\n      break;\n\n    case 68:\n      var j = 0;\n      divs = [];\n      if (this.squares.length === 0) {\n        break;\n      }\n      this.squares.forEach(function(square) {\n        var delta;\n        switch(j) {\n          case 0:\n            delta = [-1, 0];\n            break;\n          case 1:\n            delta = [0, -1];\n            break;\n          case 2:\n            delta = [0, 1];\n            break;\n          case 3:\n            delta = [1, 0];\n            break;\n        }\n        var newPos = [square.pos[0] + delta[0], square.pos[1] + delta[1]];\n        if (square.active) {\n          divs.push($('div[pos=\"' + square.pos[0] + ',' + square.pos[1] + '\"]'));\n          this.board.grid[square.pos[0]][square.pos[1]] = '.';\n          square.pos = newPos;\n          this.board.grid[newPos[0]][newPos[1]] = square.color;\n        }\n        j += 1;\n      }.bind(this));\n\n      i = 0;\n\n      this.squares.forEach(function(square, idx) {\n        if (square.active) {\n          divs[i].attr('pos', square.pos);\n          var top = 60 * square.pos[0];\n          var left = 60 * square.pos[1];\n\n          divs[i].css({top: top + 'px', left: left + 'px'});\n          i += 1;\n        }\n      });\n\n      var tempSquares = [this.squares[1], this.squares[3], this.squares[0], this.squares[2]];\n      this.squares = tempSquares;\n      this.squares.forEach(function(square) {\n        if (!square.board.checkPos([square.pos[0] + 1, square.pos[1]]) ||\n        !square.board.validPos([square.pos[0] + 1, square.pos[1]])) {\n          square.block.squares.forEach(function(otherSquare){\n            setTimeout(function() {$('div[pos=\"'+ otherSquare.pos[0] + ',' + otherSquare.pos[1] +'\"]').addClass('fixed');}, 550);\n            otherSquare.active = false;\n          });\n        }\n      });\n      break;\n\n    case 65:\n      j = 0;\n      divs = [];\n      if (this.squares.length === 0) {\n        break;\n      }\n      this.squares.forEach(function(square) {\n        var delta;\n        switch(j) {\n          case 0:\n            delta = [0, 1];\n            break;\n          case 1:\n            delta = [-1, 0];\n            break;\n          case 2:\n            delta = [1, 0];\n            break;\n          case 3:\n            delta = [0, -1];\n            break;\n        }\n        var newPos = [square.pos[0] + delta[0], square.pos[1] + delta[1]];\n        if (square.active) {\n          divs.push($('div[pos=\"' + square.pos[0] + ',' + square.pos[1] + '\"]'));\n          this.board.grid[square.pos[0]][square.pos[1]] = '.';\n          square.pos = newPos;\n          this.board.grid[newPos[0]][newPos[1]] = square.color;\n        }\n        j += 1;\n      }.bind(this));\n\n\n      i = 0;\n\n      this.squares.forEach(function(square, idx) {\n        if (square.active) {\n          divs[i].attr('pos', square.pos);\n          var top = 60 * square.pos[0];\n          var left = 60 * square.pos[1];\n\n          divs[i].css({top: top + 'px', left: left + 'px'});\n          i += 1;\n        }\n      });\n\n      var tempSquares = [this.squares[2], this.squares[0], this.squares[3], this.squares[1]];\n      this.squares = tempSquares;\n\n      this.squares.forEach(function(square) {\n        if (!square.board.checkPos([square.pos[0] + 1, square.pos[1]]) ||\n            !square.board.validPos([square.pos[0] + 1, square.pos[1]])) {\n          square.block.squares.forEach(function(otherSquare){\n            setTimeout(function() {$('div[pos=\"'+ otherSquare.pos[0] + ',' + otherSquare.pos[1] +'\"]').addClass('fixed');}, 550);\n            otherSquare.active = false;\n          });\n        }\n      });\n      break;\n    }\n};\n\nmodule.exports = Block;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/block.js\n ** module id = 4\n ** module chunks = 0\n **/"],"sourceRoot":""}